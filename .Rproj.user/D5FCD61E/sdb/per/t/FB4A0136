{
    "contents" : "#' Estimate covariance when data is missing\n#'\n#' Ignoring missing values can lead to biased estimates of the covariance.\n#' Lounici (2012) gives an unbiases estimator when the data has missing values.\n#' \n#' @param x matrix or data.frame, data with each row an observation and each column a variable.\n#' @return matrix, unbiased estimate of the covariance.\n#' @export\n#' @references\n#' High-dimensional covariance matrix estimation with missing observations.\n#' Karim Lounici. 2012.\n#' @author Stephen R. Haptonstahl \\email{srh@@haptonstahl.org}\nCovarianceWithMissing <- function(x) {\n  # Guardians\n  stopifnot(is(x, \"matrix\") | (is(x, \"data.frame\") && is.numeric(as.matrix(x))))\n  \n  x <- as.matrix(x)\n  x <- t(x)  # puts observations in columns to fit notation of Louncini (2012)\n  n <- ncol(x)  # number of observations\n  p <- nrow(x)  # number of variables\n  \n  # perform the function\n  delta <- mean(is.na(x))\n  y <- sweep(x, 1, rowMeans(x, na.rm=TRUE))\n  y[is.na(y)] <- 0\n  \n  # Equation at bottom of page 3\n  SigmaDeltaN <- matrix(0, nrow=p, ncol=p)\n  for(i in 1:n) SigmaDeltaN <- SigmaDeltaN + y[,i] %o% y[,i]\n  SigmaDeltaN <- SigmaDeltaN / n\n  \n  # Equation 1.4\n  out <- ((delta - 1) * diag(diag(SigmaDeltaN)) + SigmaDeltaN) / (delta^2)\n  \n  # prepare and return the output\n  return(out)\n}",
    "created" : 1385142343861.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3580810677",
    "id" : "FB4A0136",
    "lastKnownWriteTime" : 1385343851,
    "path" : "~/GitHub/FastImputation/dev/FastImputation/R/CovarianceWithMissing.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}